// ==========================================================================
// Backgrounds mixins
// ==========================================================================

// Translucent
// Add an alphatransparency value to any background or border color (via Elyse Holladay)
// ==========================================================================

#translucent {
  .background(@color: @white, @alpha: 1) {
    background-color: hsla(hue(@color), saturation(@color), lightness(@color), @alpha);
  }
  .border(@color: @white, @alpha: 1) {
    border-color: hsla(hue(@color), saturation(@color), lightness(@color), @alpha);
    .background-clip(padding-box);
  }
}

// Gradient Bar Colors for buttons and alerts
.gradientBar(@primaryColor, @secondaryColor, @textColor: #fff, @textShadow: 0 -1px 0 rgba(0,0,0,.25)) {
  color: @textColor;
  text-shadow: @textShadow;
  #gradient > .vertical(@primaryColor, @secondaryColor);
  border-color: @secondaryColor @secondaryColor darken(@secondaryColor, 15%);
  border-color: rgba(0,0,0,.1) rgba(0,0,0,.1) fadein(rgba(0,0,0,.1), 15%);
}

// Gradients
// ==========================================================================
#gradient {
  .horizontal(@startColor: #555, @endColor: #333) {
    background-repeat: repeat-x;
    background-image: -moz-linear-gradient(left, @startColor, @endColor); // FF 3.6+
    background-image: -webkit-gradient(linear, 0 0, 100% 0, from(@startColor), to(@endColor)); // Safari 4+, Chrome 2+
    background-image: -webkit-linear-gradient(left, @startColor, @endColor); // Safari 5.1+, Chrome 10+
    background-image: -o-linear-gradient(left, @startColor, @endColor); // Opera 11.10
    background-image: linear-gradient(to right, @startColor, @endColor); // Standard, IE10
  }
  .horizontal(@startColor: #555, @endColor: #333) when not (@disable-filters) {
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=1)",argb(@startColor),argb(@endColor))); /* IE6 & IE7 */
    -ms-filter: %("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=1)",argb(@startColor),argb(@endColor)); /* IE8+ */
  }

  .vertical(@startColor: #555, @endColor: #333) {
    background-repeat: repeat-x;
    background-image: -moz-linear-gradient(top, @startColor, @endColor); // FF 3.6+
    background-image: -webkit-gradient(linear, 0 0, 0 100%, from(@startColor), to(@endColor)); // Safari 4+, Chrome 2+
    background-image: -webkit-linear-gradient(top, @startColor, @endColor); // Safari 5.1+, Chrome 10+
    background-image: -o-linear-gradient(top, @startColor, @endColor); // Opera 11.10
    background-image: linear-gradient(to bottom, @startColor, @endColor); // Standard, IE10
  }
  .vertical(@startColor: #555, @endColor: #333) when not (@disable-filters) {
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",argb(@startColor),argb(@endColor))); /* IE6 & IE7 */
    -ms-filter: %("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",argb(@startColor),argb(@endColor)); /* IE8+ */
  }
  
  .directional(@startColor: #555, @endColor: #333, @deg: 45deg) {
    background-repeat: repeat-x;
    background-image: -moz-linear-gradient(@deg, @startColor, @endColor); // FF 3.6+
    background-image: -webkit-linear-gradient(@deg, @startColor, @endColor); // Safari 5.1+, Chrome 10+
    background-image: -o-linear-gradient(@deg, @startColor, @endColor); // Opera 11.10
    background-image: linear-gradient(@deg, @startColor, @endColor); // Standard, IE10
  }

  .horizontal-three-colors(@startColor: #00b3ee, @midColor: #7a43b6, @colorStop: 50%, @endColor: #c3325f) {
    background-color: mix(@midColor, @endColor, 80%);
    background-image: -webkit-gradient(left, linear, 0 0, 0 100%, from(@startColor), color-stop(@colorStop, @midColor), to(@endColor));
    background-image: -webkit-linear-gradient(left, @startColor, @midColor @colorStop, @endColor);
    background-image: -moz-linear-gradient(left, @startColor, @midColor @colorStop, @endColor);
    background-image: -o-linear-gradient(left, @startColor, @midColor @colorStop, @endColor);
    background-image: linear-gradient(to right, @startColor, @midColor @colorStop, @endColor);
    background-repeat: no-repeat;
  }
  .horizontal-three-colors(@startColor: #00b3ee, @midColor: #7a43b6, @colorStop: 50%, @endColor: #c3325f) when not (@disable-filters){
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",argb(@startColor),argb(@endColor))); /* IE6 & IE7 */
    -ms-filter: %("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",argb(@startColor),argb(@endColor)); /* IE8+ */
  }

  .vertical-three-colors(@startColor: #00b3ee, @midColor: #7a43b6, @colorStop: 50%, @endColor: #c3325f) {
    background-color: mix(@midColor, @endColor, 80%);
    background-image: -webkit-gradient(linear, 0 0, 0 100%, from(@startColor), color-stop(@colorStop, @midColor), to(@endColor));
    background-image: -webkit-linear-gradient(@startColor, @midColor @colorStop, @endColor);
    background-image: -moz-linear-gradient(top, @startColor, @midColor @colorStop, @endColor);
    background-image: -o-linear-gradient(@startColor, @midColor @colorStop, @endColor);
    background-image: linear-gradient(@startColor, @midColor @colorStop, @endColor);
    background-repeat: no-repeat;
  }
  .vertical-three-colors(@startColor: #00b3ee, @midColor: #7a43b6, @colorStop: 50%, @endColor: #c3325f) when not (@disable-filters) {
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",argb(@startColor),argb(@endColor))); /* IE6 & IE7 */
    -ms-filter: %("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",argb(@startColor),argb(@endColor)); /* IE8+ */
  }

  .vertical-four-colors(@startColor: #00b3ee, @midColorFirst: #7a43b6, @colorStopFirst: 30%, @midColorTwo: #fff, @colorStopTwo: 70%, @endColor: #c3325f) {
    background-image: -moz-linear-gradient(top, @startColor 0%, @midColorFirst @colorStopFirst, @midColorTwo @colorStopTwo, @endColor 100%); /* FF3.6+ */
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%,@startColor), color-stop(@colorStopFirst,@midColorFirst), color-stop(@colorStopTwo,@midColorTwo), color-stop(100%,@endColor)); /* Chrome,Safari4+ */
    background-image: -webkit-linear-gradient(top, @startColor 0%, @midColorFirst @colorStopFirst,@midColorTwo @colorStopTwo, @endColor 100%); /* Chrome10+,Safari5.1+ */
    background-image: -o-linear-gradient(top, @startColor 0%, @midColorFirst @colorStopFirst,@midColorTwo @colorStopTwo, @endColor 100%); /* Opera 11.10+ */
    background-image: -ms-linear-gradient(top, @startColor 0%, @midColorFirst @colorStopFirst,@midColorTwo @colorStopTwo, @endColor 100%); /* IE10+ */
    background-image: linear-gradient(top, @startColor 0%, @midColorFirst @colorStopFirst,@midColorTwo @colorStopTwo, @endColor 100%); /* W3C */
    background-repeat: no-repeat;
  }
  .vertical-five-colors(@startColor: #00b3ee, @midColorFirst: #7a43b6, @colorStopFirst: 30%, @midColorTwo: #fff, @colorStopTwo: 70%, @midColorThree: #232323, @colorStopThree: 90%, @endColor: #c3325f) {
    background-image: -moz-linear-gradient(top, @startColor 0%, @midColorFirst @colorStopFirst, @midColorTwo @colorStopTwo, @midColorThree @colorStopThree, @endColor 100%); /* FF3.6+ */
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%,@startColor), color-stop(@colorStopFirst,@midColorFirst), color-stop(@colorStopTwo,@midColorTwo), color-stop(@midColorThree @colorStopThree), color-stop(100%,@endColor)); /* Chrome,Safari4+ */
    background-image: -webkit-linear-gradient(top, @startColor 0%, @midColorFirst @colorStopFirst, @midColorTwo @colorStopTwo, @midColorThree @colorStopThree, @endColor 100%); /* Chrome10+,Safari5.1+ */
    background-image: -o-linear-gradient(top, @startColor 0%, @midColorFirst @colorStopFirst,@midColorTwo @colorStopTwo, @midColorThree @colorStopThree, @endColor 100%); /* Opera 11.10+ */
    background-image: -ms-linear-gradient(top, @startColor 0%, @midColorFirst @colorStopFirst,@midColorTwo @colorStopTwo, @midColorThree @colorStopThree, @endColor 100%); /* IE10+ */
    background-image: linear-gradient(top, @startColor 0%, @midColorFirst @colorStopFirst,@midColorTwo @colorStopTwo, @midColorThree @colorStopThree, @endColor 100%); /* W3C */
    background-repeat: no-repeat;
  } 

  .radial(@innerColor: #555, @outerColor: #333) {
    background-image: -webkit-gradient(radial, center center, 0, center center, 460, from(@innerColor), to(@outerColor));
    background-image: -webkit-radial-gradient(circle, @innerColor, @outerColor);
    background-image: -moz-radial-gradient(circle, @innerColor, @outerColor);
    background-image: -o-radial-gradient(circle, @innerColor, @outerColor);
    background-repeat: no-repeat;
  }
  .striped(@color: #555, @angle: 45deg) {
    background-image: -webkit-gradient(linear, 0 100%, 100% 0, color-stop(.25, rgba(255,255,255,.15)), color-stop(.25, transparent), color-stop(.5, transparent), color-stop(.5, rgba(255,255,255,.15)), color-stop(.75, rgba(255,255,255,.15)), color-stop(.75, transparent), to(transparent));
    background-image: -webkit-linear-gradient(@angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
    background-image: -moz-linear-gradient(@angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
    background-image: -o-linear-gradient(@angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
    background-image: linear-gradient(@angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
  }
}

// Button backgrounds
// ==========================================================================
.buttonBackground(@startColor, @endColor, @textColor: #fff, @textShadow: 0 -1px 0 rgba(0,0,0,.25)) {
  // gradientBar will set the background to a pleasing blend of these, to support IE<=9
  .gradientBar(@startColor, @endColor, @textColor, @textShadow);
  *background-color: @endColor; /* Darken IE7 buttons by default so they stand out more given they won't have borders */
 

  // in these cases the gradient won't cover the background, so we override
  &:hover, &:active, &.active, &.disabled, &[disabled] {
    color: @textColor;
    background-color: @endColor;
    *background-color: darken(@endColor, 5%);
  }

  // IE 7 + 8 can't handle box-shadow to show active, so we darken a bit ourselves
  &:active,
  &.active {
    background-color: darken(@endColor, 10%) e("\9");
  }
}
// ==========================================================================
// CSS3 Properties
// ==========================================================================

// User Interface
// ==========================================================================

// User select
// For selecting text on the page
.user-select(@select) {
  -webkit-user-select: @select;
     -moz-user-select: @select;
      -ms-user-select: @select;
       -o-user-select: @select;
          user-select: @select;
}

// Appearance
.appearance(@appearance) {
    -webkit-appearance: @appearance;
       -moz-appearance: @appearance;
        -ms-appearance: @appearance;
         -o-appearance: @appearance;
            appearance: @appearance;
}

// Resize anything
.resizable(@direction) {
  resize: @direction; // Options: horizontal, vertical, both
  overflow: auto; // Safari fix
}

// Opacity
.opacity(@opacity) {
  opacity: @opacity;
  @ieopacity: @opacity*100;
  filter: ~"alpha(opacity=@{ieopacity})";
}

// Placeholder text
.placeholder(@color) {
  &:-moz-placeholder            { color: @color; } // Firefox 4-18
  &::-moz-placeholder           { color: @color; } // Firefox 19+
  &:-ms-input-placeholder       { color: @color; } // Internet Explorer 10+
  &::-webkit-input-placeholder  { color: @color; } // Safari and Chrome
}

// Box sizing
// ==========================================================================

.box-sizing(@sizing) {
  -webkit-box-sizing: @sizing;
     -moz-box-sizing: @sizing;
      -ms-box-sizing: @sizing;
       -o-box-sizing: @sizing;
          box-sizing: @sizing;
}

// Border box
.border-box(){
  .box-sizing(border-box);
}

// Content box
.content-box(){
  .box-sizing(content-box);
}

// Border
// ==========================================================================

// Border Radius
.border-radius(@radius) {
  -webkit-border-radius: @radius;
     -moz-border-radius: @radius;
          border-radius: @radius;
}

// Single Corner Border Radius
.border-top-left-radius(@radius) {
  -webkit-border-top-left-radius: @radius;
      -moz-border-radius-topleft: @radius;
          border-top-left-radius: @radius;
}
.border-top-right-radius(@radius) {
  -webkit-border-top-right-radius: @radius;
      -moz-border-radius-topright: @radius;
          border-top-right-radius: @radius;
}
.border-bottom-right-radius(@radius) {
  -webkit-border-bottom-right-radius: @radius;
      -moz-border-radius-bottomright: @radius;
          border-bottom-right-radius: @radius;
}
.border-bottom-left-radius(@radius) {
  -webkit-border-bottom-left-radius: @radius;
      -moz-border-radius-bottomleft: @radius;
          border-bottom-left-radius: @radius;
}

// Single Side Border Radius
.border-top-radius(@radius) {
  .border-top-right-radius(@radius);
  .border-top-left-radius(@radius);
}
.border-right-radius(@radius) {
  .border-top-right-radius(@radius);
  .border-bottom-right-radius(@radius);
}
.border-bottom-radius(@radius) {
  .border-bottom-right-radius(@radius);
  .border-bottom-left-radius(@radius);
}
.border-left-radius(@radius) {
  .border-top-left-radius(@radius);
  .border-bottom-left-radius(@radius);
}

// Drop shadows
.box-shadow(@shadow) {
  -webkit-box-shadow: @shadow;
     -moz-box-shadow: @shadow;
          box-shadow: @shadow;
}

.inner-shadow(@shadow) {
    .box-shadow(inset @shadow);
}

// Border
.border-image(@image) {
  -webkit-border-image: @image;
     -moz-border-image: @image;
       -o-border-image: @image;
          border-image: @image;
}

// Backgrounds
// ==========================================================================

// Background clipping
// Heads up: FF 3.6 and under need "padding" instead of "padding-box"
.background-clip(@clip: padding-box) {
  -webkit-background-clip: @clip;
     -moz-background-clip: @clip;
          background-clip: @clip;
}

// Background sizing
.background-size(@size) {
  -webkit-background-size: @size;
     -moz-background-size: @size;
       -o-background-size: @size;
          background-size: @size;
}

// Background origin
.background-origin(@origin) {
  -webkit-background-origin: @origin;
     -moz-background-origin: @origin;
       -o-background-origin: @origin;
          background-origin: @origin;
}

// Transforms
// ==========================================================================

// Transform
.transform(@transform) {
    -webkit-transform: @transform; 
    -moz-transform: @transform; 
    -ms-transform: @transform; 
    -o-transform: @transform; 
    transform: @transform;
}

// Transform origin
.transform-origin(@origin) {
    -webkit-transform-origin: @origin;
       -moz-transform-origin: @origin;
        -ms-transform-origin: @origin;
         -o-transform-origin: @origin;
            transform-origin: @origin;
}

// Transform style
.transform-style(@style) {
    -webkit-transform-style: @style;
       -moz-transform-style: @style;
        -ms-transform-style: @style;
         -o-transform-style: @style;
            transform-style: @style;
}

// Perspective
.perspective(@perspective) {
    -webkit-perspective: @perspective;
       -moz-perspective: @perspective;
        -ms-perspective: @perspective;
         -o-perspective: @perspective;
            perspective: @perspective;
}

// Perspective origin
.perspective-origin(@origin) {
    -webkit-perspective-origin: @origin;
       -moz-perspective-origin: @origin;
        -ms-perspective-origin: @origin;
         -o-perspective-origin: @origin;
            perspective-origin: @origin;
}

// Backface visibility
// Prevent browsers from flickering when using CSS 3D transforms.
// Default value is `visible`, but can be changed to `hidden
.backface-visibility(@visibility){
  -webkit-backface-visibility: @visibility;
     -moz-backface-visibility: @visibility;
          backface-visibility: @visibility;
}

// 2D Transforms
// ==========================================================================

// Translate
.translate(@x, @y) {
  -webkit-transform: translate(@x, @y);
     -moz-transform: translate(@x, @y);
      -ms-transform: translate(@x, @y);
       -o-transform: translate(@x, @y);
          transform: translate(@x, @y);
}

// Rotate
.rotate(@degrees) {
  -webkit-transform: rotate(@degrees);
     -moz-transform: rotate(@degrees);
      -ms-transform: rotate(@degrees);
       -o-transform: rotate(@degrees);
          transform: rotate(@degrees);
}

// Scale
.scale(@ratio) {
  -webkit-transform: scale(@ratio);
     -moz-transform: scale(@ratio);
      -ms-transform: scale(@ratio);
       -o-transform: scale(@ratio);
          transform: scale(@ratio);
}

// Skew
.skew(@x, @y) {
  -webkit-transform: skew(@x, @y);
     -moz-transform: skew(@x, @y);
      -ms-transform: skewX(@x) skewY(@y); 
       -o-transform: skew(@x, @y);
          transform: skew(@x, @y);
  -webkit-backface-visibility: hidden; 
}

// Matrix
.matrix(@x, @y, @z, @i, @j, @k) {
    -webkit-transform: matrix(@x, @y, @z, @i, @j, @k);
       -moz-transform: matrix(@x, @y, @z, @i, @j, @k);
        -ms-transform: matrix(@x, @y, @z, @i, @j, @k);
         -o-transform: matrix(@x, @y, @z, @i, @j, @k);
            transform: matrix(@x, @y, @z, @i, @j, @k);
}

// 3D Transforms
// ==========================================================================

.translate3d(@x, @y, @z) {
  -webkit-transform: translate3d(@x, @y, @z);
     -moz-transform: translate3d(@x, @y, @z);
       -o-transform: translate3d(@x, @y, @z);
          transform: translate3d(@x, @y, @z);
}

.translateX(@x) {
  -webkit-transform: translateX(@x);
     -moz-transform: translateX(@x);
      -ms-transform: translateX(@x);
       -o-transform: translateX(@x);
          transform: translateX(@x);
}

.translateY(@y) {
  -webkit-transform: translateY(@y);
     -moz-transform: translateY(@y);
      -ms-transform: translateY(@y);
       -o-transform: translateY(@y);
          transform: translateY(@y);
}

.translateZ(@z) {
  -webkit-transform: translateZ(@z);
     -moz-transform: translateZ(@z);
      -ms-transform: translateZ(@z);
       -o-transform: translateZ(@z);
          transform: translateZ(@z);
}

// Scale3d
.scale3d(@x, @y, @z) {
  -webkit-transform: scale3d(@x, @y, @z);
     -moz-transform: scale3d(@x, @y, @z);
       -o-transform: scale3d(@x, @y, @z);
          transform: scale3d(@x, @y, @z);
}

.scaleX(@x) {
  -webkit-transform: scaleX(@x);
     -moz-transform: scaleX(@x);
      -ms-transform: scaleX(@x);
       -o-transform: scaleX(@x);
          transform: scaleX(@x);
}

.scaleY(@y) {
  -webkit-transform: scaleY(@y);
     -moz-transform: scaleY(@y);
      -ms-transform: scaleY(@y);
       -o-transform: scaleY(@y);
          transform: scaleY(@y);
}

.scaleZ(@z) {
  -webkit-transform: scaleZ(@z);
     -moz-transform: scaleZ(@z);
      -ms-transform: scaleZ(@z);
       -o-transform: scaleZ(@z);
          transform: scaleZ(@z);
}

// Rotate3d
.rotate3d(@x, @y, @z) {
  -webkit-transform: rotate3d(@x, @y, @z);
     -moz-transform: rotate3d(@x, @y, @z);
       -o-transform: rotate3d(@x, @y, @z);
          transform: rotate3d(@x, @y, @z);
}

.rotateX(@x) {
  -webkit-transform: rotateX(@x);
     -moz-transform: rotateX(@x);
      -ms-transform: rotateX(@x);
       -o-transform: rotateX(@x);
          transform: rotateX(@x);
}

.rotateY(@y) {
  -webkit-transform: rotateY(@y);
     -moz-transform: rotateY(@y);
      -ms-transform: rotateY(@y);
       -o-transform: rotateY(@y);
          transform: rotateY(@y);
}

.rotateZ(@z) {
  -webkit-transform: rotateZ(@z);
     -moz-transform: rotateZ(@z);
      -ms-transform: rotateZ(@z);
       -o-transform: rotateZ(@z);
          transform: rotateZ(@z);
}

// Transitions
// ==========================================================================

// Transition
.transition(@transition) {
  -webkit-transition: @transition;
     -moz-transition: @transition;
       -o-transition: @transition;
          transition: @transition;
}

// Transition property
.transition-property(@property) {
  -webkit-transition-property: @property;
     -moz-transition-property: @property;
       -o-transition-property: @property;
          transition-property: @property;
}

// Transition duration
.transition-duration(@duration) {
  -webkit-transition-duration: @duration;
     -moz-transition-duration: @duration;
       -o-transition-duration: @duration;
          transition-duration: @duration;
}

// Transition timing function
.transition-timing-function(@function) {
  -webkit-transition-timing-function: @function;
     -moz-transition-timing-function: @function;
       -o-transition-timing-function: @function;
          transition-timing-function: @function;
}

// Transition delay
.transition-delay(@delay) {
  -webkit-transition-delay: @delay;
     -moz-transition-delay: @delay;
       -o-transition-delay: @delay;
          transition-delay: @delay;
}

// Animations
// ==========================================================================

// Animation
.animation(@animation) {
    -webkit-animation: @animation;
       -moz-animation: @animation;
        -ms-animation: @animation;
         -o-animation: @animation;
            animation: @animation;
}

// Animation delay
.animation-delay(@delay) {
    -webkit-animation-delay: @delay;
    -moz-animation-delay: @delay;
    -ms-animation-delay: @delay;
    -o-animation-delay: @delay;
}

// Animation direction
.animation-direction(@direction) {
    -webkit-animation-direction: @direction;
    -moz-animation-direction: @direction;
    -ms-animation-direction: @direction;
    -o-animation-direction: @direction;
}

// Animation duration
.animation-duration(@duration) {
    -webkit-animation-duration: @duration;
    -moz-animation-duration: @duration;
    -ms-animation-duration: @duration;
    -o-animation-duration: @duration;
}

// Animation iteration count
.animation-iteration-count(@count) {
    -webkit-animation-iteration-count: @count;
    -moz-animation-iteration-count: @count;
    -ms-animation-iteration-count: @count;
    -o-animation-iteration-count: @count;
}

// Animation name
.animation-name(@name) {
    -webkit-animation-name: @name;
    -moz-animation-name: @name;
    -ms-animation-name: @name;
    -o-animation-name: @name;
}

// Animation play state
.animation-play-state(@state) {
    -webkit-animation-play-state: @state;
    -moz-animation-play-state: @state;
    -ms-animation-play-state: @state;
    -o-animation-play-state: @state;
}

// Animation timing function
.animation-timing-function(@function) {
    -webkit-animation-timing-function: @function;
    -moz-animation-timing-function: @function;
    -ms-animation-timing-function: @function;
    -o-animation-timing-function: @function;
}



// Multiple Columns
// ==========================================================================

// Columns
.columns(@columns){
    -webkit-columns: @columns;
    -moz-columns: @columns;
    columns: @columns;
}

// Column count
.column-count(@count) {
    -webkit-column-count: @count;
    -moz-column-count: @count;
    column-count: @count;
}

// Column gap
.column-gap(@gap) {
    -webkit-column-gap: @gap;
    -moz-column-gap: @gap;
    column-gap: @gap;
}

// Column width
.column-width(@width){
    -webkit-column-width: @width;
    -moz-column-width: @width;
    column-width: @width;
}

// Column rule
.column-rule(@rule){
    -webkit-column-rule: @rule;
    -moz-column-rule: @rule;
    column-rule: @rule;
}


// Flexible Box
// ==========================================================================

// Box orient
.box-orient(@orient) {
    -webkit-box-orient: @orient;
       -moz-box-orient: @orient;
        -ms-box-orient: @orient;
         -o-box-orient: @orient;
            box-orient: @orient;
}

// Box pack
.box-pack(@pack) {
    -webkit-box-pack: @pack;
       -moz-box-pack: @pack;
        -ms-box-pack: @pack;
         -o-box-pack: @pack;
            box-pack: @pack;
}

// Box align
.box-align(@align){
    -webkit-box-align: @align;
       -moz-box-align: @align;
        -ms-box-align: @align;
         -o-box-align: @align;
            box-align: @align;
}

// Box flex
.box-flex(@flex) {
    -webkit-box-flex: @flex;
       -moz-box-flex: @flex;
        -ms-box-flex: @flex;
         -o-box-flex: @flex;
            box-flex: @flex;
}
// ==========================================================================
// Helper mixins
// ==========================================================================


// Clearfixs
// ==========================================================================

// Clearfix
.clearfix() {
  &:before,
  &:after {
      content: "";
      display: table;
  }
  &:after {
      clear: both;
  }
}
.clearfix() when not (@using-ieclasses) {
  *zoom: 1;
}
.clearfix() when (@using-ieclasses) {
  .ie6 &, .ie7 & {
    zoom: 1;
  }
}

// Clearfix
// @see http://nicolasgallagher.com/micro-clearfix-hack/
.mobile-clearfix() {
  .clearfix();
  &:last-child {
    float: none;
  }
}

// Inline block
// ==========================================================================
.inline-block() {
  display: inline-block;
}
.inline-block() when (@using-ieclasses) {
  .ie7 & {
    display: inline;
    zoom: 1;
  }
}

.inline-block() when not (@using-ieclasses) {
  *display: inline;
  *zoom: 1;
}

.base-border-radius(@radius) when (@radius > 0) {
  .border-radius(@radius);
}

// IE7 likes to collapse whitespace on either side of the inline-block elements.
// Ems because we're attempting to match the width of a space character. Left
// version is for form buttons, which typically come after other elements, and
// right version is for icons, which come before. Applying both is ok, but it will
// mean that space between those elements will be .6em (~2 space characters) in IE7,
// instead of the 1 space in other browsers.
.ie7-restore-left-whitespace() when (@using-ieclasses) {
  .ie7 & {
    *margin-left: .3em;

    &:first-child {
      *margin-left: 0;
    }
  }
}

.ie7-restore-left-whitespace() when not (@using-ieclasses) {
  *margin-left: .3em;

  &:first-child {
    *margin-left: 0;
  }
}

.ie7-restore-right-whitespace() when (@using-ieclasses) {
  .ie7 & {
    *margin-right: .3em;
  }
}

.ie7-restore-right-whitespace() when not (@using-ieclasses) {
  *margin-right: .3em;
}

// hidden
// ==========================================================================
.hidden() {
  display: none !important;
  visibility: hidden;
}

.visually-hidden() {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
  &.focusable:active,
  &.focusable:focus {
      clip: auto;
      height: auto;
      margin: 0;
      overflow: visible;
      position: static;
      width: auto;
  }
}

// ==========================================================================
// Image mixins
// ==========================================================================

// Image Replacement
// ==========================================================================

.ir() {
  border: 0;
  font: 0/0 a;
  text-shadow: none;
  color: transparent;
  background-color: transparent;
}


// Sharpen an image if it has become blurry due to upscaling or downscaling
// Useful mainly in flat color images
// @see https://developer.mozilla.org/en/CSS/image-rendering
// ==========================================================================

.sharpen() {
	image-rendering:-moz-crisp-edges;
	-ms-interpolation-mode:nearest-neighbor;  /* IE 7+ */
}


// When photos are upscaled or downscaled, they often get blurry. Don't use
// this on flat color images, they will still appear blurry.
// Use the +sharpen mixin instead.
// @see https://developer.mozilla.org/en/CSS/image-rendering
// ==========================================================================

.high-quality() {
	image-rendering:optimizeQuality;
	-ms-interpolation-mode:bicubic;  /* IE 7+ */
}

// Optimizes the rendering on images so they
// appear faster, but at a lower quality. Useful for <video>
// ==========================================================================

.low-quality() {
	image-rendering:optimizeSpeed;
}

// Retina images
// ==========================================================================
.retina-image(@file-1x, @file-2x, @width-1x, @height-1x) {
  background-image: url("@{file-1x}");

  @media
  only screen and (-webkit-min-device-pixel-ratio: 2),
  only screen and (   min--moz-device-pixel-ratio: 2),
  only screen and (     -o-min-device-pixel-ratio: 2/1),
  only screen and (        min-device-pixel-ratio: 2),
  only screen and (                min-resolution: 192dpi),
  only screen and (                min-resolution: 2dppx) {
    background-image: url("@{file-2x}");
    background-size: @width-1x @height-1x;
  }
}

// Filter
// ==========================================================================
.filter(@filter: grayscale(100%)) {
	-webkit-filter: @filter;
	-moz-filter: @filter;
	-ms-filter: @filter;
	-o-filter: @filter;
	filter: @filter;
}

// ==========================================================================
// Shapes mixins
// ==========================================================================

.size(@height, @width) {
  width: @width;
  height: @height;
}

.square(@size) {
  .size(@size, @size);
}

.circle(@size) {
    .size(@size, @size);
    -moz-border-radius: @size/2;
    -webkit-border-radius: @size/2;
    border-radius: @size/2;
}

.triangle(@direction, @size, @color) when (@direction = up) {
    width: 0;
    height: 0;
    border-left: @size solid transparent;
    border-right: @size solid transparent;
    border-bottom: @size solid @color;
}
.triangle(@direction, @size, @color) when (@direction = down) {
    width: 0;
    height: 0;
    border-left: @size solid transparent;
    border-right: @size solid transparent;
    border-top: @size solid @color;
}
.triangle(@direction, @size, @color) when (@direction = left) {
    width: 0;
    height: 0;
    border-top: @size solid transparent;
    border-bottom: @size solid transparent;
    border-right: @size solid @color;
}
.triangle(@direction, @size, @color) when (@direction = right) {
    width: 0;
    height: 0;
    border-top: @size solid transparent;
    border-bottom: @size solid transparent;
    border-left: @size solid @color;
}
// ==========================================================================
// Sprite mixins
// ==========================================================================

.sprite(@x, @y, @sprite-image:@sprite-image, @sprite-grid:@sprite-grid) {
	.sprite-image(@sprite-image);
	.sprite-pos(@x, @y, @sprite-grid);
}

.sprite-sized(@x, @y, @size, @sprite-image:@sprite-image, @sprite-grid:@sprite-grid) when not (isnumber(@sprite-image)) {
	.sprite(@x, @y, @sprite-image, @sprite-grid);
	.size(@size);
}

.sprite-sized(@x, @y, @width, @height, @sprite-image:@sprite-image, @sprite-grid:@sprite-grid) when (isnumber(@height)) {
	.sprite(@x, @y, @sprite-image, @sprite-grid);
	.size(@width,@height);
}

.sprite-ir(@x, @y, @size, @sprite-image:@sprite-image, @sprite-grid:@sprite-grid) when not (isnumber(@sprite-image)) {
	.ir();
	.sprite(@x, @y, @sprite-image, @sprite-grid);
	.size(@size);
}

.sprite-ir(@x, @y, @width, @height, @sprite-image:@sprite-image, @sprite-grid:@sprite-grid) when (isnumber(@height)) {
	.ir();
	.sprite(@x, @y, @sprite-image, @sprite-grid);
	.size(@width,@height);
}

.sprite-image(@sprite-image:@sprite-image) {
	background-image: url(@sprite-image);
	background-repeat: no-repeat;
}

.sprite-pos(@x, @y, @sprite-grid:@sprite-grid) {
	background-position: -(@x*@sprite-grid*1px)  -(@y*@sprite-grid*1px);
}

.sprite-pos-sized(@x, @y, @size, @sprite-grid:@sprite-grid) when not (isnumber(@sprite-image)) {
	.sprite-pos(@x, @y, @sprite-grid);
	.size(@size);
}

.sprite-pos-sized(@x, @y, @width, @height, @sprite-grid:@sprite-grid) when (isnumber(@height)) {
	.sprite-pos(@x, @y, @sprite-grid);
	.size(@width,@height);
}

// ==========================================================================
// Typography mixins
// ==========================================================================

// Fonts
// ==========================================================================
#font {
  #family {
    .serif() {
      font-family: @fontFamily-serif;
    }
    .sans-serif() {
      font-family: @fontFamily-sans;
    }
    .monospace() {
      font-family: @fontFamily-mono;
    }
  }
  .shorthand(@size: @base-fontSize, @weight: normal, @lineHeight: @base-lineHeight) {
    font-size: @size;
    font-weight: @weight;
    line-height: @lineHeight;
  }
  .serif(@size: @base-fontSize, @weight: normal, @lineHeight: @base-lineHeight) {
    #font > #family > .serif;
    #font > .shorthand(@size, @weight, @lineHeight);
  }
  .sans-serif(@size: @base-fontSize, @weight: normal, @lineHeight: @base-lineHeight) {
    #font > #family > .sans-serif;
    #font > .shorthand(@size, @weight, @lineHeight);
  }
  .monospace(@size: @base-fontSize, @weight: normal, @lineHeight: @base-lineHeight) {
    #font > #family > .monospace;
    #font > .shorthand(@size, @weight, @lineHeight);
  }
}


// Typography related mixins
// ==========================================================================

.px-to-rem(@property, @px-size){
  @rem-size: @px-size / 16;

  ._px-to-rem(@px-size) when (@property = 'margin-top') {
    margin-top: ~"@{px-size}px"; 
    margin-top: ~"@{rem-size}rem";
  }

  ._px-to-rem(@px-size) when (@property = 'margin-left') {
    margin-left: ~"@{px-size}px"; 
    margin-left: ~"@{rem-size}rem";
  }

  ._px-to-rem(@px-size) when (@property = 'margin-bottom') {
    margin-bottom: ~"@{px-size}px"; 
    margin-bottom: ~"@{rem-size}rem";
  }

  ._px-to-rem(@px-size) when (@property = 'margin-right') {
    margin-right: ~"@{px-size}px"; 
    margin-right: ~"@{rem-size}rem";
  }

  ._px-to-rem(@px-size) when (@property = 'padding-top') {
    padding-top: ~"@{px-size}px"; 
    padding-top: ~"@{rem-size}rem";
  }

  ._px-to-rem(@px-size) when (@property = 'padding-left') {
    padding-left: ~"@{px-size}px"; 
    padding-left: ~"@{rem-size}rem";
  }

  ._px-to-rem(@px-size) when (@property = 'padding-bottom') {
    padding-bottom: ~"@{px-size}px"; 
    padding-bottom: ~"@{rem-size}rem";
  }

  ._px-to-rem(@px-size) when (@property = 'padding-right') {
    padding-right: ~"@{px-size}px"; 
    padding-right: ~"@{rem-size}rem";
  }  
  
  ._px-to-rem(@px-size);
}


.font-size-rems(@px-size) {
  @rem-size: @px-size / 16;
  font-size: ~"@{px-size}px"; 
  font-size: ~"@{rem-size}rem";
}

// Font Sizes (REMs with PX fallback for older browsers)
.font-size(@px-size) {
  @rem-size: @px-size / 16;
  font-size: ~"@{px-size}px"; 
  font-size: ~"@{rem-size}rem";
}

// Line Height Sizes (REMs with PX fallback for older browsers)
.line-height(@px-size) {
  @rem-size: @px-size / 16;
  line-height: ~"@{px-size}px"; 
  line-height: ~"@{rem-size}rem";
}

.font-size-ems(@target-px-size, @context-px-size:@base-font-size) {
  font-size: (@target-px-size / @context-px-size) * 1em;
}

.font-face( @family-name, @font-path, @font-weight:normal, @font-style:normal, @include-svg:false ) when not (@include-svg) {
  @font-face {
      font-family: @family-name;
      src: url('@{font-path}.eot');
      src: url('@{font-path}.eot?#iefix') format('embedded-opentype'),
           url('@{font-path}.woff') format('woff'),
           url('@{font-path}.ttf') format('truetype');
      font-weight: @font-weight;
      font-style: @font-style;
  }
}

.font-face( @family-name, @font-path, @font-weight:normal, @font-style:normal, @include-svg:false ) when (@include-svg) {
  @font-face {
      font-family: @family-name;
      src: url('@{font-path}.eot');
      src: url('@{font-path}.eot?#iefix') format('embedded-opentype'),
           url('@{font-path}.woff') format('woff'),
           url('@{font-path}.ttf') format('truetype'),
           url('@{font-path}.svg#@{family-name}') format('svg');
      font-weight: @font-weight;
      font-style: @font-style;
  }
}

// Wrap words
.wrap-words() {
  -ms-word-break: break-all;
  word-break: break-all;
  word-break: break-word;
  -webkit-hyphens: auto;
  -moz-hyphens: auto;
  hyphens: auto;
}

// Requires inline-block or block for proper styling
.text-overflow() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Optional hyphenation
// Sets how to split words to improve the layout of paragraphs
.hyphens(@mode: auto) {
  word-wrap: break-word;
  -webkit-hyphens: @mode;
     -moz-hyphens: @mode;
      -ms-hyphens: @mode;
       -o-hyphens: @mode;
          hyphens: @mode;
}
// ==========================================================================
// Variables
// ==========================================================================

// General --------------------------------

@using-ieclasses: true;		// whether or not the markup has html5-boilerplate style IE classes in it or not
@using-modernizr: false; 	// whether or not modernizer feature-detection classes are being used
@disable-filters: true; 	// whether or not to disable MS-specific 'filter' properties (can make IE slow!)


// Grays
@black:                 #000;
@gray-darker:            #222;
@gray-dark:              #333;
@gray:                  #555;
@gray-light:             #999;
@gray-lighter:           #eee;
@white:                 #fff;


// Accent colors
@blue:                  #049cdb;
@blueDark:              #0064cd;
@green:                 #46a546;
@red:                   #9d261d;
@yellow:                #ffc40d;
@orange:                #f89406;
@pink:                  #c3325f;
@purple:                #7a43b6;

@base-fontSize:          16;//px value
@base-lineHeight:        1.5;
// @fontSize-large:         @base-fontSize * 1.25; // ~18px
// @fontSize-small:         @base-fontSize * 0.85; // ~12px
// @fontSize-mini:          @base-fontSize * 0.75; // ~11px

// @padding-large:          11px 19px; // 44px
// @padding-small:          2px 10px;  // 26px
// @padding-mini:           1px 6px;   // 24px

@base-borderRadius:      2px;